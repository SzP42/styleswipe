import { c as create_ssr_component, d as add_attribute } from "../../../chunks/ssr.js";
import "../../../chunks/supabaseClient.js";
const css = {
  code: "body.svelte-1quwjmp{font-family:Arial, Helvetica, sans-serif}.signup_panel.svelte-1quwjmp{text-align:center}",
  map: '{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\r\\nimport { supabase } from \\"$lib/supabaseClient.js\\"\\r\\n\\r\\nlet email = \\"\\"\\r\\nlet password = \\"\\"\\r\\n\\r\\nfunction checkifPasswordIsOK(passW) {\\r\\n    // ensures that there\'s at least one digit, one lowercase, one uppercase, and one symbol in the string and is at least 6 characters long\\r\\n    let pattern = /^(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*/<>,.+-=~$ÃŸ]).{6,}$/;\\r\\n    return pattern.test(passW);\\r\\n}\\r\\n\\r\\nasync function userSignUp(useremail, userpassword) {\\r\\n    // checks if the password matches the requirements \\r\\n    const doesItPass = checkifPasswordIsOK(userpassword) \\r\\n    if (!doesItPass) {\\r\\n        alert(\\"Password must be at least 6 characters long, must contain lowercase, uppercase, a number and a special character\\")\\r\\n    } else {\\r\\n        // uses the supabase sdk to sign up the user\\r\\n        try { \\r\\n    const { data, error } = await supabase.auth.signUp({email: useremail, password: userpassword, options: {emailRedirectTo: \\"/welcome\\"}})\\r\\n    alert(`Confirm your email! We\'ve sent a confirmation email to ${email}`)\\r\\n    return data\\r\\n        } catch (err) {\\r\\n            console.error(err)\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nasync function handleSignInWithGoogle() {\\r\\nawait supabase.auth.signInWithOAuth({\\r\\n  provider: \\"google\\",\\r\\n  options: {\\r\\n    redirectTo: `/auth/callback`,\\r\\n  },\\r\\n})\\r\\n\\r\\n}\\r\\n<\/script>\\r\\n\\r\\n<body>\\r\\n\\r\\n<h1 style=\\"text-align:center\\">Welcome to StyleSwipe</h1>\\r\\n\\r\\n<div class=\\"signup_panel\\">\\r\\n<h3>Sign up</h3>\\r\\n<form>\\r\\n    <label for=\\"email\\">E-mail: </label>\\r\\n    <input type=\\"email\\" id=\\"email\\" bind:value={email}><br><br>\\r\\n    <label for=\\"password\\">Password: </label>\\r\\n    <input type=\\"password\\" id=\\"password\\" bind:value={password}><br><br>\\r\\n    <button on:click={() => userSignUp(email, password)}>Join StyleSwipe</button>\\r\\n</form>\\r\\n<p>Or</p>\\r\\n\\r\\n<button on:click={handleSignInWithGoogle}> Sign up with Google </button>\\r\\n\\r\\n<hr>\\r\\n<p>Already have an account? <a href=\\"/login\\">Log in</a></p>\\r\\n</div>\\r\\n</body>\\r\\n<style>\\r\\nbody {\\r\\n    font-family: Arial, Helvetica, sans-serif;\\r\\n}\\r\\n.signup_panel {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n</style>"],"names":[],"mappings":"AA8DA,mBAAK,CACD,WAAW,CAAE,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,UACnC,CACA,4BAAc,CACV,UAAU,CAAE,MAChB"}'
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let email = "";
  let password = "";
  $$result.css.add(css);
  return `<body class="svelte-1quwjmp"><h1 style="text-align:center" data-svelte-h="svelte-1bkhk26">Welcome to StyleSwipe</h1> <div class="signup_panel svelte-1quwjmp"><h3 data-svelte-h="svelte-1r4pp8">Sign up</h3> <form><label for="email" data-svelte-h="svelte-9iq5kf">E-mail:</label> <input type="email" id="email"${add_attribute("value", email, 0)}><br><br> <label for="password" data-svelte-h="svelte-14l7qdc">Password:</label> <input type="password" id="password"${add_attribute("value", password, 0)}><br><br> <button data-svelte-h="svelte-ard1v6">Join StyleSwipe</button></form> <p data-svelte-h="svelte-93986n">Or</p> <button data-svelte-h="svelte-5z4g7e">Sign up with Google</button> <hr> <p data-svelte-h="svelte-o7q3nv">Already have an account? <a href="/login">Log in</a></p></div> </body>`;
});
export {
  Page as default
};
